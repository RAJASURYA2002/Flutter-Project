=> Design in ThemeData:
//default theme
1: StyleforText
*bodyLarge: This might be used for larger body text, such as titles or headings.
*bodyMedium: Suitable for medium-sized body text, which could be used for subheadings or slightly smaller titles than bodyLarge.
*bodySmall: Ideal for smaller body text, such as captions or labels that don't need to be as prominent as larger text.
*bodyText1: Typically used for the primary body text. This is the default style for the main content of your app.
*bodyText2: Similar to bodyText1, but it might be used for secondary text or less prominent information.

2:Appbar Style
appBarTheme: const AppBarTheme(color: Color(0xff0a0d22)),

3: body(which means Scaffold widget)
scaffoldBackgroundColor: Color(0xff0a0d22),

4:floatingActionButtonTheme Style
floatingActionButtonTheme:
const FloatingActionButtonThemeData(backgroundColor: Colors.yellow),

=> Custom Theme:
floatingActionButton: Theme(
    data: ThemeData(floatingActionButtonTheme:
        const FloatingActionButtonThemeData(backgroundColor: Colors.purple),),
    child: FloatingActionButton(
      onPressed: () {},
      child: const Icon(Icons.add),
    ),
  ),

=> copywith
  theme: ThemeData.dark().copyWith(
    appBarTheme: const AppBarTheme(color: Color(0xff0a0d22)),
    scaffoldBackgroundColor: const Color(0xff0a0d22),
    # // floatingActionButtonTheme:
    # //     const FloatingActionButtonThemeData(backgroundColor: Colors.yellow),
    # // textTheme: const TextTheme(
    # //   bodyMedium: TextStyle(color: Colors.white),
    # // ),
    # //The above two values are default in ThemeData.dark()
  ),

<===========================================================================>
Container Style:
Container(
    margin: const EdgeInsets.all(15.0),
    decoration: BoxDecoration(
      color: const Color(0xff1d1f33),
      border: Border.all(color: Colors.red,width: 10.0),//it increase border thick
      #borderRadius: BorderRadius.circular(10.0)
    ),
    height: 200.0,
    width: 170.0,
  ),

  <=========================================================================>
 => Navigaton
consider there are three Screen 0,Screen 1,Screen 2,
==> first Method Push and Pop:
Push
Navigator.push('context',MaterialPageRoute(builder: (context){
  return Screen2();
},  
)
Pop
Navigator.pop(context);

==> Second Method in Main.dart:
create Map
routes:{
  '/':(context)=>Screen0(),
  '/first':(context)=>Screen1(),
  '/second':(context)=>Screen2(),
}

initialRoute:'/' //same as home:Screen0
in onpress function
Navigator.pushNamed(context,'/first');


Animation;
